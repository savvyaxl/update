---
- name: Get timestamp from the system
  register: start_date
  delegate_to: "{{delegation}}"
  run_once: true
  shell: "date"

- name: Create the start file
  delegate_to: "{{delegation}}"
  shell: "echo {{ inventory_hostname }} >> {{ start_file }}"

- name: Update all installed packages using YUM module
  become: true
  register: yum_updates
  yum:
    name: '*'
    state: latest
    update_cache: yes
    update_only: yes

- name: Create the connected file
  delegate_to: "{{delegation}}"
  shell: "echo {{ inventory_hostname }} >> {{ connected_file }}"

- name: Create the updated file
  delegate_to: "{{delegation}}"
  when: yum_updates.changed
  shell: "echo {{ inventory_hostname }} >> {{ updated_file }}"

- name: check to see if we need a reboot
  become: true
  register: needsrestart
  changed_when: needsrestart.rc == 1
  notify:
    - Perform reboot
    - Wait for 200 seconds after the reboot
  command: needs-restarting -r

- name: Create the needsrestart file
  delegate_to: "{{delegation}}"
  when: needsrestart.rc == 1
  shell: "echo {{ inventory_hostname }} >> {{ needsrestart_file }}"

- name: Flush handlers
  meta: flush_handlers

- name: Get the uptime
  command: uptime
  register: uptime

- name: check to see if we need a reboot the second time
  become: true
  register: needsrestart2
  ignore_errors: yes
  command: needs-restarting -r

- name: Create the Restarted file
  delegate_to: "{{delegation}}"
  when: needsrestart2.rc == 0 and needsrestart.rc == 1
  shell: "echo {{ inventory_hostname }} >> {{ restared_file }}"

- name: Get timestamp from the system
  register: end_date
  delegate_to: "{{delegation}}"
  run_once: true
  shell: "date"

- include_tasks: create_summery.yml

- include_tasks: email.yml

- include_tasks: clear_files.yml
